 a. Realizar un módulo que reciba un par de números (numA,numB) y retorne si numB es el doble de
numA.

program ejercicio_5a;
function cumple (numA:integer;numB:integer):boolean ;
  begin
    numB:=numB-numA;
    if (numB = numA)then begin
      cumple:= true;
    end
    else 
      cumple:= false;
  end;
procedure retorno (numA:integer;numB:integer; var doble:boolean);
  begin 
    if (numA<numB)then begin 
      doble:= cumple (numA,numB);
    end  
    else begin
      if (numB<numA)then 
        doble:= false;
    end;
  end;
var 
  numA,numB:integer;
  doble:boolean;
begin 
  readln(numA);
  readln(numB);
  retorno(numA,numB,doble);
  if (doble = true)then begin
    write('numB es el doble de numA');
  end
  else begin
    if (doble=false)then 
      write('numB no es el doble de numA');
  end;
end.

b. Utilizando el módulo realizado en el inciso a., realizar un programa que lea secuencias de pares de
números hasta encontrar el par (0,0), e informe la cantidad total de pares de números leídos y la cantidad
de pares en las que numB es el doble de numA.

program ejercicio_5a;
function cumple (numA:integer;numB:integer):boolean ;
  begin
    numB:=numB-numA;
    if (numB = numA)then begin
      cumple:= true;
    end
    else 
      cumple:= false;
  end;
procedure retorno (numA:integer;numB:integer; var doble:boolean);
  begin 
    if (numA<numB)then begin 
      doble:= cumple (numA,numB);
    end  
    else begin
      if (numB<numA)then 
        doble:= false;
    end;
  end;
var 
  numA,numB,cant_doble,cant_leidos:integer;
  doble:boolean;
begin 
  cant_leidos:=0;
  cant_doble:=0;
  readln(numA);
  readln(numB);
  while (numA<>0) or (numB<>0)do begin 
    retorno(numA,numB,doble);
    if (doble = true)then 
      cant_doble:=cant_doble+1;
    cant_leidos:=cant_leidos+1;
    readln(numA);
    readln(numB);
  end;
  writeln('la cantidad de pares leidos son:',cant_leidos);
  writeln('la cantidad de pares en las que numB es el doble son:',cant_doble);
end.
