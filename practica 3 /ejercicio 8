8. La Comisión Provincial por la Memoria desea analizar la información de los proyectos presentados en el
programa Jóvenes y Memoria durante la convocatoria 2020. Cada proyecto posee un código único, un título, el
docente coordinador (DNI, nombre y apellido, email), la cantidad de alumnos que participan del proyecto, el
nombre de la escuela y la localidad a la que pertenecen. Cada escuela puede presentar más de un proyecto. La
información se ingresa ordenada consecutivamente por localidad y, para cada localidad, por escuela. Realizar
un programa que lea la información de los proyectos hasta que se ingrese el proyecto con código -1 (que no
debe procesarse), e informe:
● Cantidad total de escuelas que participan en la convocatoria 2018 y cantidad de escuelas por cada
localidad.
● Nombres de las dos escuelas con mayor cantidad de alumnos participantes.
● Título de los proyectos de la localidad de Daireaux cuyo código posee igual cantidad de dígitos pares e
impares.


ESTA HECHO EL PROGRAMA PARA QUE SE INGRESEN TODOS LOS VALORES DEL MISMO AÑO YA QUE NO IDENTIFICA A QUE AÑO PERTENECE , YA QUE NO TIENE EN LOS REGISTROS ALGUN PARAMETRO QUE SEA EL AÑO.
(osea si se mesclan años, los identifica como si pertenecen al mismo año, osea que la persona se tiene que encargar de cargar los datos que sean del mismo año)


program ejercicio_8;
type
  cordinador = record
    dni: integer;
    nombre: string;
    apellido: string;
    email: string;
  end;
  proyectos = record
    codigo: integer;
    titulo: string;
    docente: cordinador;
    cant_alumnos: integer;
    nombre_escuela: string;
    localidad : string;
  end;
  
procedure datos_docente(var p:proyectos{var c:cordinador});
  begin 
    writeln('ingrese el dni del docente: ');
   {readln(c.dni);}
    readln(p.docente.dni);
    writeln('ingrese el nombre del docente: ');
   {readln(c.nombre);}
    readln(p.docente.nombre);
    writeln('ingrese el apellido del docente: ');
   {readln(c.apellido);}
    readln(p.docente.apellido);
    writeln('ingrese el email del docente: ');
   {readln(c.email);}
    readln(p.docente.email);
  end;
  
procedure ingresar(var p:proyectos);
 {var 
    c:cordinador;}
  begin  
    writeln('ingrese el codigo: ');
    readln(p.codigo);
    if (p.codigo<>-1)then begin 
      writeln('ingrese titulo: ');
      readln(p.titulo);
      datos_docente(p);
      writeln('ingrese la cantidad de alumnos: ');
      readln(p.cant_alumnos);
      writeln('ingrese el nombre de la escuela: ');
      readln(p.nombre_escuela);
      writeln('ingrese la localidad: ');
      readln(p.localidad);
    end;
  end;
  
procedure mayor_cant (p:proyectos;var mayor1,mayor2:integer;var escuela1,escuela2:string);
  begin
    if(p.cant_alumnos > mayor1)then begin 
      mayor2:= mayor1;
      escuela2:= escuela1;
      mayor1:= p.cant_alumnos;
      escuela1:= p.nombre_escuela;
    end
    else begin
      if(p.cant_alumnos > mayor2)then begin 
        mayor1:= p.cant_alumnos;
        escuela1:= p.nombre_escuela;
      end;
    end;
  end;
  
function cumple(codigo:integer):boolean;
  var 
    pares:integer;
    impares:integer;
    aux:integer;
  begin 
    pares:=0;
    impares:=0;
    while (codigo <> 0) do begin 
      aux:= codigo mod 10;
      if (aux mod 2 = 0)then begin 
        pares:= pares+1;
      end
      else 
        impares:= impares+1;
      codigo:= codigo div 10;
    end;
    if (pares = impares)then begin 
      cumple := true;
    end
    else 
      cumple := false;
  end;

procedure daireaux (p:proyectos;var nom_titulo:string);
  begin
    if(p.localidad = 'daireaux')then begin 
      if (cumple(p.codigo))then begin 
        nom_titulo:=p.titulo;
        writeln('titulo del proyecto de la localidad de daireaux que tiene la misma cantidad de dig pares e impares en su codigo: ',nom_titulo);
      end;
    end;
  end;
  
procedure cantidad_total(p:proyectos;var cant_total,cant_localidad:integer;var escuela_act,localidad_act: string);
  begin 
    if(p.localidad=localidad_act)then begin
      if(escuela_act<>p.nombre_escuela)then begin 
        cant_total:=cant_total+1;
        cant_localidad:=cant_localidad+1;
      end;
    end;
  end;
  
procedure leer(p:proyectos;var mayor1,mayor2,cant_total,cant_localidad: integer;var escuela1,escuela2,nom_titulo,escuela_act,localidad_act: string);
  begin 
    mayor_cant(p,mayor1,mayor2,escuela1,escuela2);
    daireaux(p,nom_titulo);
    cantidad_total(p,cant_total,cant_localidad,escuela_act,localidad_act);
  end;
  
var 
  p:proyectos;
  mayor1,mayor2,cant_total,cant_localidad: integer;
  escuela1,escuela2,nom_titulo,escuela_act,localidad_act: string;
begin  
  mayor1:=0;
  mayor2:=0;
  cant_total:=0;
  cant_localidad:=0;
  ingresar(p);
  localidad_act:=p.localidad;
  while(p.codigo <> -1) do begin
    if(p.localidad = localidad_act)then begin 
      leer(p,mayor1,mayor2,cant_total,cant_localidad,escuela1,escuela2,nom_titulo,escuela_act,localidad_act);
      escuela_act:=p.nombre_escuela;
      ingresar(p);
    end
    else begin 
      writeln('la cantidad de escuelas en la localidad: ',localidad_act,' es: ',cant_localidad);
      cant_localidad:=0;
      localidad_act:=p.localidad;
      leer(p,mayor1,mayor2,cant_total,cant_localidad,escuela1,escuela2,nom_titulo,escuela_act,localidad_act);
      escuela_act:=p.nombre_escuela;
    end;
  end;
  writeln('las escuelas con mayor cantidad de alumnos participantes es: ',escuela1,' y ',escuela2);
end.
